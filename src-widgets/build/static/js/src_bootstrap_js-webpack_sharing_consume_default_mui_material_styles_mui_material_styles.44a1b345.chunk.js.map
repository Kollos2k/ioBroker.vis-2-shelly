{"version":3,"file":"static/js/src_bootstrap_js-webpack_sharing_consume_default_mui_material_styles_mui_material_styles.44a1b345.chunk.js","mappings":"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","sources":["components/Device.jsx","components/DeviceActions.jsx","components/DeviceConfig.jsx","ShellyAllDevices.jsx","ShellyByRoomDevices.jsx","ShellyCustomDeviceList.jsx","translations.js","App.jsx","bootstrap.js"],"sourcesContent":["import React, { Component, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { withStyles } from \"@mui/styles\";\nimport \"./device.css\";\nimport { object } from \"prop-types\";\n\nconst styles = (theme) => ({});\n// let css = {};\n\nclass Device extends Component {\n\tel = React.createRef(null);\n\n\tcomponents = {};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tprops.socket.subscribeState(Object.values(props.dataPoint), (id, state) => {\n\t\t\tthis.stateChange(id, state);\n\t\t});\n\t}\n\n\tasync stateChange(id, state) {\n\t\tthis.props.state[id] = state;\n\t\tif (typeof this.props.typeConfig.update === \"undefined\") return false;\n\t\tlet idKey;\n\t\tObject.entries(this.props.dataPoint).forEach(([k, v]) => {\n\t\t\tif (v === id) idKey = k;\n\t\t});\n\t\tif (typeof this.props.typeConfig.update[idKey] === \"undefined\") return false;\n\t\tconst updateKey =\n\t\t\ttypeof this.props.typeConfig.update[idKey].viewPoint !== \"undefined\"\n\t\t\t\t? this.props.typeConfig.update[idKey].viewPoint\n\t\t\t\t: idKey;\n\t\tif (typeof this.components[updateKey] === \"undefined\") return false;\n\t\tif (typeof this.props.typeConfig.update[idKey].updateValue === \"function\") {\n\t\t\tconst val = typeof state === \"undefined\" ? \"\" : state === null ? \"\" : state.val;\n\t\t\tthis.props.typeConfig.update[idKey].updateValue({\n\t\t\t\tdom: this.components[updateKey].current,\n\t\t\t\tnewVal: val,\n\t\t\t\tconfig: this.props.typeConfig.update[idKey],\n\t\t\t\tsocket: this.props.socket,\n\t\t\t\tdataPoint: this.props.dataPoint,\n\t\t\t\tstate: this.props.state,\n\t\t\t});\n\t\t}\n\t\tif (typeof this.props.typeConfig.update[idKey].updateAck === \"function\") {\n\t\t\tconst ack = typeof state === \"undefined\" ? \"\" : state === null ? \"\" : state.ack;\n\t\t\tthis.props.typeConfig.update[idKey].updateAck({\n\t\t\t\tdom: this.components[idKey].current,\n\t\t\t\tnewAck: ack,\n\t\t\t\tconfig: this.props.typeConfig.update[idKey],\n\t\t\t\tsocket: this.props.socket,\n\t\t\t\tdataPoint: this.props.dataPoint,\n\t\t\t\tstate: this.props.state,\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync propertiesUpdate() {\n\t\tif (typeof this.props.state !== \"undefined\" && this.props.state !== null) {\n\t\t\tObject.values(this.props.dataPoint).forEach((value) => {\n\t\t\t\tif (typeof this.props.state[value] !== \"undefined\") {\n\t\t\t\t\tthis.stateChange(value, this.props.state[value]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.propertiesUpdate();\n\t}\n\n\trender() {\n\t\tif (typeof this.props.typeConfig.action === \"undefined\") this.props.typeConfig.action = {};\n\t\tthis.components.icon = React.createRef(null);\n\t\tthis.components.name = React.createRef(null);\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.props.deviceDomID}\n\t\t\t\tclassName=\"vis2_shelly_DeviceBody\"\n\t\t\t\ttitle={this.props.stateID}\n\t\t\t\tref={this.el}\n\t\t\t\t// style={\"width:200px\"}\n\t\t\t>\n\t\t\t\t<span name=\"status\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<span className=\"connectionState connectionStateOnline\"></span>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span name=\"icon\" ref={this.components.icon}></span>\n\t\t\t\t<span name=\"name\" ref={this.components.name}>\n\t\t\t\t\t{this.props.id}\n\t\t\t\t</span>\n\t\t\t\t<span name=\"info\">\n\t\t\t\t\t{Object.entries(this.props.typeConfig.view.info).map(([viewKey, viewVal]) => {\n\t\t\t\t\t\tthis.components[viewVal.name] = React.createRef(null);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span name={viewVal.name} className={viewVal.class} ref={this.components[viewVal.name]}>\n\t\t\t\t\t\t\t\t{viewVal.html}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t\t<span name=\"action\">\n\t\t\t\t\t{Object.entries(this.props.typeConfig.view.action).map(([viewKey, viewVal]) => {\n\t\t\t\t\t\tthis.components[viewVal.name] = React.createRef(null);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tname={viewVal.name}\n\t\t\t\t\t\t\t\tclassName={viewVal.class}\n\t\t\t\t\t\t\t\tstyle={viewVal.style}\n\t\t\t\t\t\t\t\tref={this.components[viewVal.name]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{viewVal.html}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t{Object.values(this.props.typeConfig.action).map((actionVal) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"actionButton\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttop: actionVal.y,\n\t\t\t\t\t\t\t\t\tleft: actionVal.x,\n\t\t\t\t\t\t\t\t\theight: actionVal.h,\n\t\t\t\t\t\t\t\t\twidth: actionVal.w,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\tactionVal.click({\n\t\t\t\t\t\t\t\t\t\tdom: this.el.current,\n\t\t\t\t\t\t\t\t\t\tdataPoint: this.props.dataPoint,\n\t\t\t\t\t\t\t\t\t\toptions: actionVal,\n\t\t\t\t\t\t\t\t\t\tsocket: this.props.socket,\n\t\t\t\t\t\t\t\t\t\tstate: this.props.state,\n\t\t\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withStyles(styles)(Device);\n","export const basicUpdateValue = (arg) => {\n\targ.dom.innerHTML = arg.newVal;\n};\nexport const basicUpdateMotionValue = (arg) => {\n\targ.dom.classList.remove(\"motionyes\");\n\targ.dom.classList.remove(\"motionno\");\n\tif (arg.newVal === true) {\n\t\targ.dom.classList.add(\"motionyes\");\n\t\targ.dom.innerHTML = \"Ja\";\n\t} else {\n\t\targ.dom.classList.add(\"motionno\");\n\t\targ.dom.innerHTML = \"Nein\";\n\t}\n};\nexport const basicUpdateValueName = (arg) => {\n\targ.dom.innerHTML = arg.newVal;\n};\nexport const basicUpdateValueUnit = (arg) => {\n\targ.dom.innerHTML = `${arg.newVal} ${arg.config.unit}`;\n};\nexport const basicUpdateValueBrightness = (arg) => {\n\targ.dom.innerHTML = `${arg.newVal} ${arg.config.unit}`;\n\t// arg.dom.appendChild(<button type=\"button\">+</button>);\n\t// const $b1 = $(\"<button class='brightnessButton'>-</button>\");\n\t// const $b2 = $(\"<button class='brightnessButton'>+</button>\");\n\t// $b1.click(() => {\n\t// \tif (newVal < 10) {\n\t// \t\tnewVal = 0;\n\t// \t} else {\n\t// \t\tnewVal -= 10;\n\t// \t}\n\t// \tvis.setValue(stageID, newVal);\n\t// });\n\t// $b2.click(() => {\n\t// \tif (newVal > 90) {\n\t// \t\tnewVal = 100;\n\t// \t} else {\n\t// \t\tnewVal += 10;\n\t// \t}\n\t// \tvis.setValue(stageID, newVal);\n\t// });\n\t// $dom.append($b1);\n\t// $dom.append($b2);\n};\nexport const basicUpdateDevicePower = (arg) => {\n\tlet exP = null;\n\tlet percent = null;\n\t// eslint-disable-next-line array-callback-return\n\tObject.entries(arg.state).map(([k, v]) => {\n\t\tif (typeof arg.dataPoint.externalPower !== \"undefined\" && arg.dataPoint.externalPower === k) exP = v;\n\t\telse if (typeof arg.dataPoint.batteryPercent !== \"undefined\" && arg.dataPoint.batteryPercent === k) percent = v;\n\t});\n\targ.dom.classList.remove(\"externalPower\");\n\targ.dom.classList.remove(\"battery\");\n\tif (exP !== null && typeof exP === \"object\" && exP.val === true) {\n\t\targ.dom.classList.add(\"externalPower\");\n\t\targ.dom.innerHTML = \"Energie\";\n\t} else {\n\t\targ.dom.classList.add(\"battery\");\n\t\targ.dom.innerHTML = `${percent === null || typeof percent !== \"object\" ? percent : percent.val} %`;\n\t}\n};\nexport const basicUpdateTRVAck = (arg) => {\n\tconst $dom = arg.dom.querySelector(\"[name='svgShellyTRVButton']\");\n\tif ($dom === null) return false;\n\tif ($dom.contentDocument === null) return false;\n\tconst element = $dom.contentDocument.firstChild;\n\tif (element === null) return false;\n\tif (arg.newAck === true) {\n\t\telement.classList.remove(\"animatedAction\");\n\t} else {\n\t\telement.classList.add(\"animatedAction\");\n\t}\n\treturn true;\n};\nexport const basicUpdateSwitchAck = (arg) => {\n\tconst $dom = arg.dom.querySelector(\"[name='svgShellyButton']\");\n\tif (!$dom.hasAttribute(\"loadAck\")) {\n\t\t$dom.addEventListener(\n\t\t\t\"load\",\n\t\t\t() => {\n\t\t\t\tbasicUpdateSwitchAck(arg);\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t\t$dom.setAttribute(\"loadAck\", \"true\");\n\t}\n\tif ($dom === null) return false;\n\tif ($dom.contentDocument === null) return false;\n\tconst element = $dom.contentDocument.firstChild;\n\tif (element === null) return false;\n\tif (arg.newAck === true) {\n\t\telement.classList.remove(\"animatedAction\");\n\t} else {\n\t\telement.classList.add(\"animatedAction\");\n\t}\n\treturn true;\n};\nexport const basicUpdateSwitch = (arg) => {\n\tconst $dom = arg.dom.querySelector(\"[name='svgShellyButton']\");\n\tif (!$dom.hasAttribute(\"loadValue\")) {\n\t\t$dom.addEventListener(\n\t\t\t\"load\",\n\t\t\t() => {\n\t\t\t\tbasicUpdateSwitch(arg);\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t\t$dom.setAttribute(\"loadValue\", \"true\");\n\t}\n\tif ($dom !== null) {\n\t\tif ($dom.contentDocument === null) {\n\t\t\treturn;\n\t\t}\n\t\tconst element = $dom.contentDocument.firstChild;\n\t\tif (element === null) return;\n\t\tif (arg.newVal) {\n\t\t\telement.classList.add(\"active\");\n\t\t} else {\n\t\t\telement.classList.remove(\"active\");\n\t\t}\n\t}\n};\nexport const basicActionNumberStepper = (arg) => {\n\tconst stateID = arg.dataPoint[arg.options.dataPoint];\n\tif (typeof stateID === \"undefined\") return false;\n\tif (typeof arg.state[stateID] === \"undefined\") return false;\n\tlet newVal =\n\t\ttypeof arg.state[stateID] === \"undefined\" || arg.state[stateID] === null\n\t\t\t? arg.options.minValue\n\t\t\t: arg.state[stateID].val;\n\tnewVal += arg.options.step;\n\tif (newVal < arg.options.minValue) newVal = arg.options.minValue;\n\tif (newVal > arg.options.maxValue) newVal = arg.options.maxValue;\n\targ.socket.setState(stateID, newVal, false);\n\treturn true;\n};\nexport const basicActionBooleanToggle = (arg) => {\n\tconst stateID = arg.dataPoint[arg.options.dataPoint];\n\tif (typeof stateID === \"undefined\") return false;\n\tif (typeof arg.state[stateID] === \"undefined\") return false;\n\tconst newVal = arg.state[stateID] === null ? false : arg.state[stateID].val !== true;\n\targ.socket.setState(stateID, newVal, false);\n\treturn true;\n};\n","import * as DeviceActions from \"./DeviceActions\";\n\nconst getDeviceConfigByType = (type, domID, props, vsID) => {\n\tlet typeConfig = {};\n\tconst switchButton = (\n\t\t<object\n\t\t\tname=\"svgShellyButton\"\n\t\t\ttype=\"image/svg+xml\"\n\t\t\tdata=\"/vis-2/widgets/vis-2-shelly/vis2/img/shellySwitchButton.svg\"\n\t\t\ttitle=\"Switch\"\n\t\t></object>\n\t);\n\tconst switchTRVButton = (\n\t\t<object\n\t\t\tname=\"svgShellyTRVButton\"\n\t\t\ttype=\"image/svg+xml\"\n\t\t\tdata=\"/vis-2/widgets/vis-2-shelly/vis2/img/shellyTRVButton.svg\"\n\t\t\tstyle={{ margin: \"5px\", width: \"125px\" }}\n\t\t\ttitle=\"TRVSwitch\"\n\t\t></object>\n\t);\n\tswitch (type) {\n\t\tcase \"SHDM-2\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tpower: {\n\t\t\t\t\t\tname: \"power\",\n\t\t\t\t\t\tunit: \"W\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tbrightness: {\n\t\t\t\t\t\tname: \"brightness\",\n\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueBrightness,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateSwitchAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateSwitch,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\tpower: { name: \"power\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tbrightness: { name: \"brightness\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: switchButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tx: \"0px\",\n\t\t\t\t\t\ty: \"0px\",\n\t\t\t\t\t\tw: \"100%\",\n\t\t\t\t\t\th: \"100%\",\n\t\t\t\t\t\tdataPoint: \"switch\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionBooleanToggle,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\tpower: `${props.stateID}.lights.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.lights.Switch`,\n\t\t\t\t\t\tbrightness: `${props.stateID}.lights.brightness`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"SHPLG-S\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tpower: {\n\t\t\t\t\t\tname: \"power\",\n\t\t\t\t\t\tunit: \"W\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateSwitchAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateSwitch,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: { power: { name: \"power\", class: \"icon\", html: \"\" } },\n\t\t\t\t\taction: {\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: switchButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tx: \"0px\",\n\t\t\t\t\t\ty: \"0px\",\n\t\t\t\t\t\tw: \"100%\",\n\t\t\t\t\t\th: \"100%\",\n\t\t\t\t\t\tdataPoint: \"switch\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionBooleanToggle,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\tpower: `${props.stateID}.Relay0.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.Relay0.Switch`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"shellyplus1pm\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tpower: {\n\t\t\t\t\t\tname: \"power\",\n\t\t\t\t\t\tunit: \"W\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tvoltage: {\n\t\t\t\t\t\tname: \"voltage\",\n\t\t\t\t\t\tunit: \"V\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateSwitchAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateSwitch,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\tpower: { name: \"power\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tvoltage: { name: \"voltage\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: switchButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tx: \"0px\",\n\t\t\t\t\t\ty: \"0px\",\n\t\t\t\t\t\tw: \"100%\",\n\t\t\t\t\t\th: \"100%\",\n\t\t\t\t\t\tdataPoint: \"switch\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionBooleanToggle,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\tpower: `${props.stateID}.Relay0.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.Relay0.Switch`,\n\t\t\t\t\t\tvoltage: `${props.stateID}.Relay0.Voltage`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"shellyplusplugs\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tpower: {\n\t\t\t\t\t\tname: \"power\",\n\t\t\t\t\t\tunit: \"W\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tvoltage: {\n\t\t\t\t\t\tname: \"voltage\",\n\t\t\t\t\t\tunit: \"V\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateSwitchAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateSwitch,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\tpower: { name: \"power\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tvoltage: { name: \"voltage\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: switchButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tx: \"0px\",\n\t\t\t\t\t\ty: \"0px\",\n\t\t\t\t\t\tw: \"100%\",\n\t\t\t\t\t\th: \"100%\",\n\t\t\t\t\t\tdataPoint: \"switch\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionBooleanToggle,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\tpower: `${props.stateID}.Relay0.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.Relay0.Switch`,\n\t\t\t\t\t\tvoltage: `${props.stateID}.Relay0.Voltage`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"shellyplus2pm\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tpower: {\n\t\t\t\t\t\tname: \"power\",\n\t\t\t\t\t\tunit: \"W\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tvoltage: {\n\t\t\t\t\t\tname: \"voltage\",\n\t\t\t\t\t\tunit: \"V\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateSwitchAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateSwitch,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\tpower: { name: \"power\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tvoltage: { name: \"voltage\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\tswitch: {\n\t\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: switchButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tswitch: {\n\t\t\t\t\t\tname: \"switch\",\n\t\t\t\t\t\tx: \"0px\",\n\t\t\t\t\t\ty: \"0px\",\n\t\t\t\t\t\tw: \"100%\",\n\t\t\t\t\t\th: \"100%\",\n\t\t\t\t\t\tdataPoint: \"switch\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionBooleanToggle,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\tpower: `${props.stateID}.Relay0.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.Relay0.Switch`,\n\t\t\t\t\t\tvoltage: `${props.stateID}.Relay0.Voltage`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t\t1: {\n\t\t\t\t\t\tpower: `${props.stateID}.Relay1.Power`,\n\t\t\t\t\t\tswitch: `${props.stateID}.Relay1.Switch`,\n\t\t\t\t\t\tvoltage: `${props.stateID}.Relay1.Voltage`,\n\t\t\t\t\t\tname: `${vsID}.1.name`,\n\t\t\t\t\t\troom: `${vsID}.1.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"shellyplusht\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\thumidity: {\n\t\t\t\t\t\tname: \"humidity\",\n\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tbatteryPercent: {\n\t\t\t\t\t\tname: \"devicePower\",\n\t\t\t\t\t\tviewPoint: \"devicePower\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateDevicePower,\n\t\t\t\t\t},\n\t\t\t\t\texternalPower: {\n\t\t\t\t\t\tname: \"devicePower\",\n\t\t\t\t\t\tviewPoint: \"devicePower\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateDevicePower,\n\t\t\t\t\t},\n\t\t\t\t\ttemperature: {\n\t\t\t\t\t\tname: \"temperature\",\n\t\t\t\t\t\tunit: \"°C\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\thumidity: { name: \"humidity\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\texternalPower: { name: \"devicePower\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttemperature: {\n\t\t\t\t\t\t\tname: \"temperature\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"temperature\",\n\t\t\t\t\t\t\thtml: \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\ttemperature: `${props.stateID}.Temperature0.Celsius`,\n\t\t\t\t\t\thumidity: `${props.stateID}.Humidity0.Relative`,\n\t\t\t\t\t\texternalPower: `${props.stateID}.DevicePower0.ExternalPower`,\n\t\t\t\t\t\tbatteryPercent: `${props.stateID}.DevicePower0.BatteryPercent`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"SHTRV-01\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tvalvePosition: {\n\t\t\t\t\t\tname: \"valvePosition\",\n\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tbatteryPercent: {\n\t\t\t\t\t\tname: \"devicePower\",\n\t\t\t\t\t\tviewPoint: \"devicePower\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateDevicePower,\n\t\t\t\t\t},\n\t\t\t\t\texternalPower: {\n\t\t\t\t\t\tname: \"devicePower\",\n\t\t\t\t\t\tviewPoint: \"devicePower\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateDevicePower,\n\t\t\t\t\t},\n\t\t\t\t\ttemperature: {\n\t\t\t\t\t\tname: \"temperature\",\n\t\t\t\t\t\tunit: \"°C\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\ttemperatureTarget: {\n\t\t\t\t\t\tname: \"temperatureTarget\",\n\t\t\t\t\t\tunit: \"°C\",\n\t\t\t\t\t\tupdateAck: DeviceActions.basicUpdateTRVAck,\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\ttemperature: { name: \"temperature\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tvalvePosition: { name: \"valvePosition\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tdevicePower: { name: \"devicePower\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\ttemperatureTarget: {\n\t\t\t\t\t\t\tname: \"temperatureTarget\",\n\t\t\t\t\t\t\tstyle: {},\n\t\t\t\t\t\t\tclass: \"TRVValue\",\n\t\t\t\t\t\t\thtml: \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\tname: \"buttons\",\n\t\t\t\t\t\t\tstyle: { width: \"135px\" },\n\t\t\t\t\t\t\tclass: \"TRVButton\",\n\t\t\t\t\t\t\thtml: switchTRVButton,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: {\n\t\t\t\t\tdown: {\n\t\t\t\t\t\tname: \"buttons\",\n\t\t\t\t\t\tx: \"5px\",\n\t\t\t\t\t\ty: \"5px\",\n\t\t\t\t\t\tw: \"45px\",\n\t\t\t\t\t\th: \"50px\",\n\t\t\t\t\t\tminValue: 15,\n\t\t\t\t\t\tmaxValue: 30,\n\t\t\t\t\t\tstep: -0.5,\n\t\t\t\t\t\tdataPoint: \"temperatureTarget\",\n\t\t\t\t\t\tclick: DeviceActions.basicActionNumberStepper,\n\t\t\t\t\t},\n\t\t\t\t\tup: {\n\t\t\t\t\t\tname: \"buttons\",\n\t\t\t\t\t\tx: \"85px\",\n\t\t\t\t\t\ty: \"5px\",\n\t\t\t\t\t\tw: \"45px\",\n\t\t\t\t\t\th: \"50px\",\n\t\t\t\t\t\tminValue: 15,\n\t\t\t\t\t\tmaxValue: 30,\n\t\t\t\t\t\tstep: +0.5,\n\t\t\t\t\t\tdataPoint: \"temperatureTarget\",\n\t\t\t\t\t\tonClick: {\n\t\t\t\t\t\t\tfind: \"[name='svgShellyTRVButton']\",\n\t\t\t\t\t\t\tcontentDocument: true,\n\t\t\t\t\t\t\tclassName: \"animatedAction\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclick: DeviceActions.basicActionNumberStepper,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\ttemperature: `${props.stateID}.tmp.temperatureC`,\n\t\t\t\t\t\ttemperatureTarget: `${props.stateID}.tmp.temperatureTargetC`,\n\t\t\t\t\t\tvalvePosition: `${props.stateID}.tmp.valvePosition`,\n\t\t\t\t\t\texternalPower: `${props.stateID}.bat.charger`,\n\t\t\t\t\t\tbatteryPercent: `${props.stateID}.bat.value`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"SHMOS-02\":\n\t\t\ttypeConfig = {\n\t\t\t\tdomID,\n\t\t\t\tupdate: {\n\t\t\t\t\tlux: {\n\t\t\t\t\t\tname: \"lux\",\n\t\t\t\t\t\tunit: \"Lux\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tbatteryPercent: {\n\t\t\t\t\t\tname: \"devicePower\",\n\t\t\t\t\t\tunit: \"%\",\n\t\t\t\t\t\tviewPoint: \"devicePower\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateDevicePower,\n\t\t\t\t\t},\n\t\t\t\t\tmotion: {\n\t\t\t\t\t\tname: \"motion\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateMotionValue,\n\t\t\t\t\t},\n\t\t\t\t\ttemperature: {\n\t\t\t\t\t\tname: \"temperature\",\n\t\t\t\t\t\tunit: \"°C\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueUnit,\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t\toname: {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tupdateValue: DeviceActions.basicUpdateValueName,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tview: {\n\t\t\t\t\tinfo: {\n\t\t\t\t\t\ttemperature: { name: \"temperature\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tbatteryPercent: { name: \"devicePower\", class: \"icon\", html: \"\" },\n\t\t\t\t\t\tlux: { name: \"lux\", class: \"icon\", html: \"\" },\n\t\t\t\t\t},\n\t\t\t\t\taction: {\n\t\t\t\t\t\tmotion: {\n\t\t\t\t\t\t\tname: \"motion\",\n\t\t\t\t\t\t\tstyle: { width: \"70px\" },\n\t\t\t\t\t\t\tclass: \"\",\n\t\t\t\t\t\t\thtml: \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdataPoint: {\n\t\t\t\t\t0: {\n\t\t\t\t\t\ttemperature: `${props.stateID}.sensor.temperatureC`,\n\t\t\t\t\t\tmotion: `${props.stateID}.sensor.motion`,\n\t\t\t\t\t\tlux: `${props.stateID}.sensor.lux`,\n\t\t\t\t\t\tbatteryPercent: `${props.stateID}.sensor.battery`,\n\t\t\t\t\t\tname: `${vsID}.0.name`,\n\t\t\t\t\t\troom: `${vsID}.0.room`,\n\t\t\t\t\t\tdeviceID: props.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\treturn typeConfig;\n};\n\nexport default getDeviceConfigByType;\n","import React from \"react\";\nimport { Card, CardContent } from \"@mui/material\";\n\nimport { I18n } from \"@iobroker/adapter-react-v5\";\nimport { VisRxWidget } from \"@iobroker/vis-2-widgets-react-dev\";\nimport Device from \"./components/Device\";\nimport getDeviceConfigByType from \"./components/DeviceConfig\";\n\nclass ShellyAllDevices extends (window.visRxWidget || VisRxWidget) {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// props.myContainer = useRef(null);\n\t\tthis.state.allDevices = {};\n\t\tconsole.debug(\"THIS\");\n\t\tconsole.debug(this);\n\t}\n\n\tstatic getWidgetInfo() {\n\t\treturn {\n\t\t\tid: \"tplAllDevicesWidget\",\n\t\t\tvisSet: \"vis-2-shelly\",\n\t\t\tvisSetLabel: \"vis_2_widgets_shelly\", // Widget set translated label (should be defined only in one widget of set)\n\t\t\tvisSetColor: \"#cf00ff\", // Color of widget set. it is enough to set color only in one widget of set\n\t\t\tvisName: \"AllDevices\", // Name of widget\n\t\t\tvisAttrs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"common\", // group name\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"display\", // name in data structure\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_display\", // translated field label\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"block\", label: \"block\" },\n\t\t\t\t\t\t\t\t{ value: \"flex\", label: \"flex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tnoTranslation: true,\n\t\t\t\t\t\t\tdefault: \"block\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t// check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n\t\t\t],\n\t\t\tvisPrev: \"widgets/vis-2-shelly/vis2/img/editor/allDevices.png\",\n\t\t};\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tasync propertiesUpdate() {\n\t\t// Widget has 3 important states\n\t\t// 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n\t\t//                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n\t\t// 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n\t\t//                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n\t\t// 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n\t\t//                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n\t}\n\n\tasync componentDidMount() {\n\t\tsuper.componentDidMount();\n\t\tthis.props.context.socket.subscribeState([\"vis-2-shelly.0.devices.ids\"], (id, state) => {\n\t\t\tthis.state.allDevices = JSON.parse(state.val);\n\t\t\tthis.forceUpdate();\n\t\t});\n\n\t\t// Update data\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// Do not delete this method. It is used by vis to read the widget configuration.\n\t// eslint-disable-next-line class-methods-use-this\n\tgetWidgetInfo() {\n\t\treturn ShellyAllDevices.getWidgetInfo();\n\t}\n\n\t// This function is called every time when rxData is changed\n\tasync onRxDataChanged() {\n\t\tconsole.debug(\"onRxDataChanged\");\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// This function is called every time when rxStyle is changed\n\t// eslint-disable-next-line class-methods-use-this\n\tasync onRxStyleChanged() {}\n\n\t// This function is called every time when some Object State updated, but all changes lands into this.state.values too\n\t// eslint-disable-next-line class-methods-use-this, no-unused-vars\n\tasync onStateUpdated(id, state) {}\n\n\trenderWidgetBody(props) {\n\t\tsuper.renderWidgetBody(props);\n\t\tconsole.debug(this.props.context.socket);\n\t\t// Object.values(this.state.allDevices).map((device) => console.log(device));\n\t\treturn (\n\t\t\t<Card style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{Object.values(this.state.allDevices).map((device) => {\n\t\t\t\t\t\tthis.vsID = `vis-2-shelly.${device.instance}.devices.${device.id}`;\n\t\t\t\t\t\tthis.domID = device.id.replaceAll(\"#\", \"\");\n\t\t\t\t\t\tconst typeConfig = getDeviceConfigByType(\n\t\t\t\t\t\t\tdevice.type,\n\t\t\t\t\t\t\tthis.domID,\n\t\t\t\t\t\t\t{ stateID: device.stateId, type: device.type, id: device.id },\n\t\t\t\t\t\t\tthis.vsID,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint !== \"undefined\" &&\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint[device.relay] !== \"undefined\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst deviceDomID = typeConfig.domID + device.relay;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Device\n\t\t\t\t\t\t\t\t\tstateID={device.stateId}\n\t\t\t\t\t\t\t\t\ttype={device.type}\n\t\t\t\t\t\t\t\t\tid={device.id}\n\t\t\t\t\t\t\t\t\ttypeConfig={typeConfig}\n\t\t\t\t\t\t\t\t\tdeviceDomID={deviceDomID}\n\t\t\t\t\t\t\t\t\trelay={device.relay}\n\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\tdataPoint={typeConfig.dataPoint[device.relay]}\n\t\t\t\t\t\t\t\t\tsocket={this.props.context.socket}\n\t\t\t\t\t\t\t\t\twidID={this.props.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t\t{/* {I18n.t(\"My Demo Shelly2: \")} */}\n\t\t\t\t\t{/* {this.state.values[`${this.state.rxData.oid}.val`]} */}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default ShellyAllDevices;\n","import React from \"react\";\nimport { Card, CardContent, TextField, Select, Option } from \"@mui/material\";\n\nimport { I18n, ObjectBrowser } from \"@iobroker/adapter-react-v5\";\nimport { VisRxWidget } from \"@iobroker/vis-2-widgets-react-dev\";\nimport Device from \"./components/Device\";\nimport getDeviceConfigByType from \"./components/DeviceConfig\";\n\nclass ShellyByRoomDevices extends (window.visRxWidget || VisRxWidget) {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// props.myContainer = useRef(null);\n\t\tthis.state.allDevices = {};\n\t\tthis.state.roomDevices = {};\n\t\tconsole.debug(\"THIS ROOM\");\n\t\tconsole.debug(this);\n\t}\n\n\tstatic getWidgetInfo() {\n\t\treturn {\n\t\t\tid: \"tplByRoomDevicesWidget\",\n\t\t\tvisSet: \"vis-2-shelly\",\n\t\t\tvisSetLabel: \"vis_2_widgets_shelly\", // Widget set translated label (should be defined only in one widget of set)\n\t\t\tvisSetColor: \"#cf00ff\", // Color of widget set. it is enough to set color only in one widget of set\n\t\t\tvisName: \"ByRoomDevices\", // Name of widget\n\t\t\tvisAttrs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"common\", // group name\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"display\", // name in data structure\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_display\", // translated field label\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"block\", label: \"block\" },\n\t\t\t\t\t\t\t\t{ value: \"flex\", label: \"flex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tnoTranslation: true,\n\t\t\t\t\t\t\tdefault: \"block\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"rooms\",\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_rooms\",\n\t\t\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\t\t\tcomponent: (field, data, onDataChange, socket, widgetID, view, project) => {\n\t\t\t\t\t\t\t\t// console.debug(\"Component\");\n\t\t\t\t\t\t\t\t// console.debug(this);\n\t\t\t\t\t\t\t\t// console.debug(field);\n\t\t\t\t\t\t\t\t// console.debug(\"DATA\");\n\t\t\t\t\t\t\t\t// console.debug(data);\n\t\t\t\t\t\t\t\t// console.debug(socket);\n\t\t\t\t\t\t\t\tconst roomList =\n\t\t\t\t\t\t\t\t\ttypeof socket.context.socket.states.roomList !== \"undefined\"\n\t\t\t\t\t\t\t\t\t\t? socket.context.socket.states.roomList\n\t\t\t\t\t\t\t\t\t\t: {};\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t// id={`${widgetID}_ShellyRoomSelect`}\n\t\t\t\t\t\t\t\t\t\tname=\"ShellyByRoom_RoomSelect\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\tvalue={data[field.name]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tonDataChange({ [field.name]: e.target.value }); // returns all changed field as object.\n\t\t\t\t\t\t\t\t\t\t\t// If some propertiy is null, so it will be deleted from data\n\t\t\t\t\t\t\t\t\t\t\t// this.updateRoomDevices();\n\t\t\t\t\t\t\t\t\t\t\tconsole.debug(field);\n\t\t\t\t\t\t\t\t\t\t\tconsole.debug(data);\n\t\t\t\t\t\t\t\t\t\t\tconsole.debug(onDataChange);\n\t\t\t\t\t\t\t\t\t\t\tconsole.debug(socket);\n\t\t\t\t\t\t\t\t\t\t\t// console.debug(widgetID);\n\t\t\t\t\t\t\t\t\t\t\t// console.debug(view);\n\t\t\t\t\t\t\t\t\t\t\t// console.debug(project);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">-- Select room --</option>\n\t\t\t\t\t\t\t\t\t\t{Object.entries(roomList).map(([key, val]) => {\n\t\t\t\t\t\t\t\t\t\t\treturn <option value={key}>{val}</option>;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t// check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n\t\t\t],\n\t\t\tvisPrev: \"widgets/vis-2-shelly/vis2/img/editor/allDevices.png\",\n\t\t};\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tasync propertiesUpdate() {\n\t\t// Widget has 3 important states\n\t\t// 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n\t\t//                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n\t\t// 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n\t\t//                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n\t\t// 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n\t\t//                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n\t\tthis.updateRoomDevices();\n\t}\n\n\tasync updateRoomDevices() {\n\t\tthis.state.roomDevices = {};\n\t\tif (typeof this.state.data.rooms !== \"undefined\") {\n\t\t\tObject.entries(this.state.allDevices).forEach(([key, device]) => {\n\t\t\t\tif (device.room === this.state.data.rooms) {\n\t\t\t\t\tthis.state.roomDevices[key] = device;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tsuper.componentDidMount();\n\t\tif (typeof this.props.context.socket.states.roomList === \"undefined\") {\n\t\t\tthis.props.context.socket.subscribeState([\"vis-2-shelly.0.devices.roomIds\"], (id, state) => {\n\t\t\t\tthis.state.rooms = JSON.parse(state.val);\n\t\t\t\tthis.props.context.socket.states.roomList = this.state.rooms;\n\t\t\t});\n\t\t}\n\t\tthis.props.context.socket.subscribeState([\"vis-2-shelly.0.devices.ids\"], (id, state) => {\n\t\t\tthis.state.allDevices = JSON.parse(state.val);\n\t\t\tthis.updateRoomDevices();\n\t\t\tthis.forceUpdate();\n\t\t});\n\n\t\t// Update data\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// Do not delete this method. It is used by vis to read the widget configuration.\n\t// eslint-disable-next-line class-methods-use-this\n\tgetWidgetInfo() {\n\t\treturn ShellyByRoomDevices.getWidgetInfo();\n\t}\n\n\t// This function is called every time when rxData is changed\n\tasync onRxDataChanged() {\n\t\tconsole.debug(\"onRxDataChanged\");\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// This function is called every time when rxStyle is changed\n\t// eslint-disable-next-line class-methods-use-this\n\tasync onRxStyleChanged() {}\n\n\t// This function is called every time when some Object State updated, but all changes lands into this.state.values too\n\t// eslint-disable-next-line class-methods-use-this, no-unused-vars\n\tasync onStateUpdated(id, state) {}\n\n\trenderWidgetBody(props) {\n\t\tsuper.renderWidgetBody(props);\n\t\tconsole.debug(\"room devices\");\n\t\tconsole.debug(this.state.roomDevices);\n\t\treturn (\n\t\t\t<Card style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{Object.values(this.state.roomDevices).map((device) => {\n\t\t\t\t\t\tthis.vsID = `vis-2-shelly.${device.instance}.devices.${device.id}`;\n\t\t\t\t\t\tthis.domID = device.id.replaceAll(\"#\", \"\");\n\t\t\t\t\t\tconst typeConfig = getDeviceConfigByType(\n\t\t\t\t\t\t\tdevice.type,\n\t\t\t\t\t\t\tthis.domID,\n\t\t\t\t\t\t\t{ stateID: device.stateId, type: device.type, id: device.id },\n\t\t\t\t\t\t\tthis.vsID,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint !== \"undefined\" &&\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint[device.relay] !== \"undefined\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst deviceDomID = typeConfig.domID + device.relay;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Device\n\t\t\t\t\t\t\t\t\tstateID={device.stateId}\n\t\t\t\t\t\t\t\t\ttype={device.type}\n\t\t\t\t\t\t\t\t\tid={device.id}\n\t\t\t\t\t\t\t\t\ttypeConfig={typeConfig}\n\t\t\t\t\t\t\t\t\tdeviceDomID={deviceDomID}\n\t\t\t\t\t\t\t\t\trelay={device.relay}\n\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\tdataPoint={typeConfig.dataPoint[device.relay]}\n\t\t\t\t\t\t\t\t\tsocket={this.props.context.socket}\n\t\t\t\t\t\t\t\t\twidID={this.props.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default ShellyByRoomDevices;\n","import React from \"react\";\nimport { Card, CardContent, TextField, Select, Option } from \"@mui/material\";\n\nimport { I18n, ObjectBrowser } from \"@iobroker/adapter-react-v5\";\nimport { VisRxWidget } from \"@iobroker/vis-2-widgets-react-dev\";\nimport Device from \"./components/Device\";\nimport getDeviceConfigByType from \"./components/DeviceConfig\";\n\nclass ShellyCustomDeviceList extends (window.visRxWidget || VisRxWidget) {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// props.myContainer = useRef(null);\n\t\tthis.state.allDevices = {};\n\t\tthis.state.deviceList = {};\n\t\tconsole.debug(\"THIS DEVICES\");\n\t\tconsole.debug(this);\n\t}\n\n\tstatic getWidgetInfo() {\n\t\treturn {\n\t\t\tid: \"tplCustomDeviceListWidget\",\n\t\t\tvisSet: \"vis-2-shelly\",\n\t\t\tvisSetLabel: \"vis_2_widgets_shelly\", // Widget set translated label (should be defined only in one widget of set)\n\t\t\tvisSetColor: \"#cf00ff\", // Color of widget set. it is enough to set color only in one widget of set\n\t\t\tvisName: \"CustomDeviceList\", // Name of widget\n\t\t\tvisAttrs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"common\", // group name\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"display\", // name in data structure\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_display\", // translated field label\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"block\", label: \"block\" },\n\t\t\t\t\t\t\t\t{ value: \"flex\", label: \"flex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tnoTranslation: true,\n\t\t\t\t\t\t\tdefault: \"block\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"count\",\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefault: 1,\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_device_count\",\n\t\t\t\t\t\t\tonChange: (field, data, changeData) => changeData(data),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"devices\", // name of custom group\n\t\t\t\t\tlabel: \"vis_2_widgets_shelly_group_devices\", // label of custom group\n\t\t\t\t\tindexFrom: 1, // optional start index of iterator\n\t\t\t\t\tindexTo: \"count\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"device\",\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_device\",\n\t\t\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\t\t\tcomponent: (field, data, onDataChange, socket, widgetID, view, project) => {\n\t\t\t\t\t\t\t\tconst deviceList =\n\t\t\t\t\t\t\t\t\ttypeof socket.context.socket.states.deviceList !== \"undefined\"\n\t\t\t\t\t\t\t\t\t\t? socket.context.socket.states.deviceList\n\t\t\t\t\t\t\t\t\t\t: {};\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"ShellyDeviceList_DeviceSelect\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\tvalue={data[field.name]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tonDataChange({ [field.name]: e.target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">-- Select device --</option>\n\t\t\t\t\t\t\t\t\t\t{Object.entries(deviceList).map(([key, val]) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{val.name !== null && val.name.length > 0 ? val.name : val.id}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t// check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n\t\t\t],\n\t\t\tvisPrev: \"widgets/vis-2-shelly/vis2/img/editor/allDevices.png\",\n\t\t};\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tasync propertiesUpdate() {\n\t\t// Widget has 3 important states\n\t\t// 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n\t\t//                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n\t\t// 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n\t\t//                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n\t\t// 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n\t\t//                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n\t\tthis.updateDeviceList();\n\t}\n\n\tasync updateDeviceList() {\n\t\tthis.state.deviceList = {};\n\t\tfor (let count = 1; count <= this.state.data.count; count++) {\n\t\t\tif (\n\t\t\t\ttypeof this.state.data[`device${count}`] !== \"undefined\" &&\n\t\t\t\ttypeof this.state.allDevices[this.state.data[`device${count}`]] !== \"undefined\"\n\t\t\t) {\n\t\t\t\tthis.state.deviceList[count] = this.state.allDevices[this.state.data[`device${count}`]];\n\t\t\t}\n\t\t}\n\t\tthis.forceUpdate();\n\t}\n\n\tasync componentDidMount() {\n\t\tsuper.componentDidMount();\n\t\tthis.props.context.socket.subscribeState([\"vis-2-shelly.0.devices.ids\"], (id, state) => {\n\t\t\tthis.state.allDevices = JSON.parse(state.val);\n\t\t\tthis.props.context.socket.states.deviceList = this.state.allDevices;\n\t\t\tthis.updateDeviceList();\n\t\t\tthis.forceUpdate();\n\t\t});\n\n\t\t// Update data\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// Do not delete this method. It is used by vis to read the widget configuration.\n\t// eslint-disable-next-line class-methods-use-this\n\tgetWidgetInfo() {\n\t\treturn ShellyCustomDeviceList.getWidgetInfo();\n\t}\n\n\t// This function is called every time when rxData is changed\n\tasync onRxDataChanged() {\n\t\tconsole.debug(\"onRxDataChanged\");\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// This function is called every time when rxStyle is changed\n\t// eslint-disable-next-line class-methods-use-this\n\tasync onRxStyleChanged() {}\n\n\t// This function is called every time when some Object State updated, but all changes lands into this.state.values too\n\t// eslint-disable-next-line class-methods-use-this, no-unused-vars\n\tasync onStateUpdated(id, state) {}\n\n\trenderWidgetBody(props) {\n\t\tsuper.renderWidgetBody(props);\n\t\treturn (\n\t\t\t<Card style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{Object.values(this.state.deviceList).map((device) => {\n\t\t\t\t\t\tthis.vsID = `vis-2-shelly.${device.instance}.devices.${device.id}`;\n\t\t\t\t\t\tthis.domID = device.id.replaceAll(\"#\", \"\");\n\t\t\t\t\t\tconst typeConfig = getDeviceConfigByType(\n\t\t\t\t\t\t\tdevice.type,\n\t\t\t\t\t\t\tthis.domID,\n\t\t\t\t\t\t\t{ stateID: device.stateId, type: device.type, id: device.id },\n\t\t\t\t\t\t\tthis.vsID,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint !== \"undefined\" &&\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint[device.relay] !== \"undefined\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst deviceDomID = typeConfig.domID + device.relay;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Device\n\t\t\t\t\t\t\t\t\tstateID={device.stateId}\n\t\t\t\t\t\t\t\t\ttype={device.type}\n\t\t\t\t\t\t\t\t\tid={device.id}\n\t\t\t\t\t\t\t\t\ttypeConfig={typeConfig}\n\t\t\t\t\t\t\t\t\tdeviceDomID={deviceDomID}\n\t\t\t\t\t\t\t\t\trelay={device.relay}\n\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\tdataPoint={typeConfig.dataPoint[device.relay]}\n\t\t\t\t\t\t\t\t\tsocket={this.props.context.socket}\n\t\t\t\t\t\t\t\t\twidID={this.props.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default ShellyCustomDeviceList;\n","const translations = {\n    en: require('./i18n/en.json'),\n    de: require('./i18n/de.json'),\n    ru: require('./i18n/ru.json'),\n    pt: require('./i18n/pt.json'),\n    nl: require('./i18n/nl.json'),\n    fr: require('./i18n/fr.json'),\n    it: require('./i18n/it.json'),\n    es: require('./i18n/es.json'),\n    pl: require('./i18n/pl.json'),\n    'zh-cn': require('./i18n/zh-cn.json'),\n};\n\nexport default translations;\n","import React from \"react\";\nimport { withStyles } from \"@mui/styles\";\n\nimport WidgetDemoApp from \"@iobroker/vis-2-widgets-react-dev/widgetDemoApp\";\nimport { i18n as I18n } from \"@iobroker/adapter-react-v5\";\n\nimport { Checkbox, TextField } from \"@mui/material\";\nimport AllDevicesWidget from \"./ShellyAllDevices\";\nimport ByRoomDevicesWidget from \"./ShellyByRoomDevices\";\nimport CustomDeviceListWidget from \"./ShellyCustomDeviceList\";\nimport translations from \"./translations\";\n// import css from \"./style.css\";\n\nconst styles = (theme) => ({\n\tapp: {},\n});\nclass App extends WidgetDemoApp {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// var t=await(async function(){return(await getState(\"\")).val;}\n\t\t// init translations\n\t\tI18n.extendTranslations(translations);\n\t\tthis.socket.registerConnectionHandler(this.onConnectionChanged);\n\t}\n\n\tonConnectionChanged = (isConnected) => {\n\t\tif (isConnected) {\n\t\t\tthis.socket.getSystemConfig().then((systemConfig) => this.setState({ systemConfig }));\n\t\t}\n\t};\n\n\trenderWidget() {\n\t\tconst widgets = {\n\t\t\tallDevices: AllDevicesWidget.getWidgetInfo(),\n\t\t\troomDevices: ByRoomDevicesWidget.getWidgetInfo(),\n\t\t\tcustomDeviceList: CustomDeviceListWidget.getWidgetInfo(),\n\t\t};\n\n\t\treturn (\n\t\t\t<div className={this.props.classes.app}>\n\t\t\t\t<div>\n\t\t\t\t\t{Object.keys(widgets).map((key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={key} style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t\t\t{/* <Checkbox\n\t\t\t\t\t\t\t\tchecked={!this.state.disabled[key]}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst disabled = JSON.parse(JSON.stringify(this.state.disabled));\n\t\t\t\t\t\t\t\t\tdisabled[key] = !e.target.checked;\n\t\t\t\t\t\t\t\t\twindow.localStorage.setItem(\"disabled\", JSON.stringify(disabled));\n\t\t\t\t\t\t\t\t\t// this.setState({ disabled });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t{/* {Object.keys(widgets).map((key) => (this.state.disabled[key] ? null : widgets[key]))} */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(App);\n","import bootstrap from '@iobroker/vis-2-widgets-react-dev/bootstrap';\nimport App from './App';\n\nbootstrap(App);\n"],"names":["Device","Component","constructor","props","super","el","React","components","socket","subscribeState","Object","values","dataPoint","id","state","this","stateChange","typeConfig","update","idKey","entries","forEach","_ref","k","v","updateKey","viewPoint","updateValue","val","dom","current","newVal","config","updateAck","ack","newAck","propertiesUpdate","value","componentDidMount","render","action","icon","name","_jsxs","deviceDomID","className","title","stateID","ref","children","_jsx","view","info","map","_ref2","viewKey","viewVal","class","html","_ref3","style","actionVal","top","y","left","x","height","h","width","w","onClick","e","click","options","event","withStyles","theme","basicUpdateMotionValue","arg","classList","remove","add","innerHTML","basicUpdateValueName","basicUpdateValueUnit","concat","unit","basicUpdateValueBrightness","basicUpdateDevicePower","exP","percent","externalPower","batteryPercent","basicUpdateTRVAck","$dom","querySelector","contentDocument","element","firstChild","basicUpdateSwitchAck","hasAttribute","addEventListener","setAttribute","basicUpdateSwitch","basicActionNumberStepper","minValue","step","maxValue","setState","basicActionBooleanToggle","getDeviceConfigByType","type","domID","vsID","switchButton","data","switchTRVButton","margin","power","DeviceActions","brightness","oname","switch","room","deviceID","voltage","humidity","temperature","valvePosition","temperatureTarget","devicePower","buttons","down","up","find","lux","motion","ShellyAllDevices","window","visRxWidget","VisRxWidget","allDevices","console","debug","getWidgetInfo","visSet","visSetLabel","visSetColor","visName","visAttrs","fields","label","noTranslation","default","visPrev","context","JSON","parse","forceUpdate","onRxDataChanged","onRxStyleChanged","onStateUpdated","renderWidgetBody","Card","CardContent","device","instance","replaceAll","stateId","relay","widID","ShellyByRoomDevices","roomDevices","component","field","onDataChange","widgetID","project","roomList","states","onChange","target","key","updateRoomDevices","rooms","ShellyCustomDeviceList","deviceList","changeData","indexFrom","indexTo","length","updateDeviceList","count","en","require","de","ru","pt","nl","fr","it","es","pl","App","WidgetDemoApp","onConnectionChanged","isConnected","getSystemConfig","then","systemConfig","I18n","extendTranslations","translations","registerConnectionHandler","renderWidget","widgets","AllDevicesWidget","ByRoomDevicesWidget","customDeviceList","CustomDeviceListWidget","classes","app","keys","display","alignItems","bootstrap"],"sourceRoot":""}