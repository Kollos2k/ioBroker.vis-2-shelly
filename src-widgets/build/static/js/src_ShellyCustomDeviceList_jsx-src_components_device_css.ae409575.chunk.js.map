{"version":3,"file":"static/js/src_ShellyCustomDeviceList_jsx-src_components_device_css.ae409575.chunk.js","mappings":"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","sources":["ShellyCustomDeviceList.jsx","../node_modules/object-assign/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CardContent, TextField, Select, Option } from \"@mui/material\";\n\nimport { I18n, ObjectBrowser } from \"@iobroker/adapter-react-v5\";\nimport { VisRxWidget } from \"@iobroker/vis-2-widgets-react-dev\";\nimport Device from \"./components/Device\";\nimport getDeviceConfigByType from \"./components/DeviceConfig\";\n\nclass ShellyCustomDeviceList extends (window.visRxWidget || VisRxWidget) {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// props.myContainer = useRef(null);\n\t\tthis.state.allDevices = {};\n\t\tthis.state.deviceList = {};\n\t\tconsole.debug(\"THIS DEVICES\");\n\t\tconsole.debug(this);\n\t}\n\n\tstatic getWidgetInfo() {\n\t\treturn {\n\t\t\tid: \"tplCustomDeviceListWidget\",\n\t\t\tvisSet: \"vis-2-shelly\",\n\t\t\tvisSetLabel: \"vis_2_widgets_shelly\", // Widget set translated label (should be defined only in one widget of set)\n\t\t\tvisSetColor: \"#cf00ff\", // Color of widget set. it is enough to set color only in one widget of set\n\t\t\tvisName: \"CustomDeviceList\", // Name of widget\n\t\t\tvisAttrs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"common\", // group name\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"display\", // name in data structure\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_display\", // translated field label\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"block\", label: \"block\" },\n\t\t\t\t\t\t\t\t{ value: \"flex\", label: \"flex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tnoTranslation: true,\n\t\t\t\t\t\t\tdefault: \"block\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"count\",\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefault: 1,\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_device_count\",\n\t\t\t\t\t\t\tonChange: (field, data, changeData) => changeData(data),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"devices\", // name of custom group\n\t\t\t\t\tlabel: \"vis_2_widgets_shelly_group_devices\", // label of custom group\n\t\t\t\t\tindexFrom: 1, // optional start index of iterator\n\t\t\t\t\tindexTo: \"count\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"device\",\n\t\t\t\t\t\t\tlabel: \"vis_2_widgets_shelly_device\",\n\t\t\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\t\t\tcomponent: (field, data, onDataChange, socket, widgetID, view, project) => {\n\t\t\t\t\t\t\t\tconst deviceList =\n\t\t\t\t\t\t\t\t\ttypeof socket.context.socket.states.deviceList !== \"undefined\"\n\t\t\t\t\t\t\t\t\t\t? socket.context.socket.states.deviceList\n\t\t\t\t\t\t\t\t\t\t: {};\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tname=\"ShellyDeviceList_DeviceSelect\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\tvalue={data[field.name]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tonDataChange({ [field.name]: e.target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">-- Select device --</option>\n\t\t\t\t\t\t\t\t\t\t{Object.entries(deviceList).map(([key, val]) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{val.name !== null && val.name.length > 0 ? val.name : val.id}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t// check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n\t\t\t],\n\t\t\tvisPrev: \"widgets/vis-2-shelly/vis2/img/editor/allDevices.png\",\n\t\t};\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tasync propertiesUpdate() {\n\t\t// Widget has 3 important states\n\t\t// 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n\t\t//                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n\t\t// 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n\t\t//                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n\t\t// 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n\t\t//                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n\t\tthis.updateDeviceList();\n\t}\n\n\tasync updateDeviceList() {\n\t\tthis.state.deviceList = {};\n\t\tfor (let count = 1; count <= this.state.data.count; count++) {\n\t\t\tif (\n\t\t\t\ttypeof this.state.data[`device${count}`] !== \"undefined\" &&\n\t\t\t\ttypeof this.state.allDevices[this.state.data[`device${count}`]] !== \"undefined\"\n\t\t\t) {\n\t\t\t\tthis.state.deviceList[count] = this.state.allDevices[this.state.data[`device${count}`]];\n\t\t\t}\n\t\t}\n\t\tthis.forceUpdate();\n\t}\n\n\tasync componentDidMount() {\n\t\tsuper.componentDidMount();\n\t\tthis.props.context.socket.subscribeState([\"vis-2-shelly.0.devices.ids\"], (id, state) => {\n\t\t\tthis.state.allDevices = JSON.parse(state.val);\n\t\t\tthis.props.context.socket.states.deviceList = this.state.allDevices;\n\t\t\tthis.updateDeviceList();\n\t\t\tthis.forceUpdate();\n\t\t});\n\n\t\t// Update data\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// Do not delete this method. It is used by vis to read the widget configuration.\n\t// eslint-disable-next-line class-methods-use-this\n\tgetWidgetInfo() {\n\t\treturn ShellyCustomDeviceList.getWidgetInfo();\n\t}\n\n\t// This function is called every time when rxData is changed\n\tasync onRxDataChanged() {\n\t\tconsole.debug(\"onRxDataChanged\");\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// This function is called every time when rxStyle is changed\n\t// eslint-disable-next-line class-methods-use-this\n\tasync onRxStyleChanged() {}\n\n\t// This function is called every time when some Object State updated, but all changes lands into this.state.values too\n\t// eslint-disable-next-line class-methods-use-this, no-unused-vars\n\tasync onStateUpdated(id, state) {}\n\n\trenderWidgetBody(props) {\n\t\tsuper.renderWidgetBody(props);\n\t\treturn (\n\t\t\t<Card style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{Object.values(this.state.deviceList).map((device) => {\n\t\t\t\t\t\tthis.vsID = `vis-2-shelly.${device.instance}.devices.${device.id}`;\n\t\t\t\t\t\tthis.domID = device.id.replaceAll(\"#\", \"\");\n\t\t\t\t\t\tconst typeConfig = getDeviceConfigByType(\n\t\t\t\t\t\t\tdevice.type,\n\t\t\t\t\t\t\tthis.domID,\n\t\t\t\t\t\t\t{ stateID: device.stateId, type: device.type, id: device.id },\n\t\t\t\t\t\t\tthis.vsID,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint !== \"undefined\" &&\n\t\t\t\t\t\t\ttypeof typeConfig.dataPoint[device.relay] !== \"undefined\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst deviceDomID = typeConfig.domID + device.relay;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Device\n\t\t\t\t\t\t\t\t\tstateID={device.stateId}\n\t\t\t\t\t\t\t\t\ttype={device.type}\n\t\t\t\t\t\t\t\t\tid={device.id}\n\t\t\t\t\t\t\t\t\ttypeConfig={typeConfig}\n\t\t\t\t\t\t\t\t\tdeviceDomID={deviceDomID}\n\t\t\t\t\t\t\t\t\trelay={device.relay}\n\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\tdataPoint={typeConfig.dataPoint[device.relay]}\n\t\t\t\t\t\t\t\t\tsocket={this.props.context.socket}\n\t\t\t\t\t\t\t\t\twidID={this.props.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default ShellyCustomDeviceList;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["ShellyCustomDeviceList","window","visRxWidget","VisRxWidget","constructor","props","super","this","state","allDevices","deviceList","console","debug","getWidgetInfo","id","visSet","visSetLabel","visSetColor","visName","visAttrs","name","fields","label","type","options","value","noTranslation","default","onChange","field","data","changeData","indexFrom","indexTo","component","onDataChange","socket","widgetID","view","project","context","states","_jsxs","style","width","e","target","children","_jsx","Object","entries","map","_ref","key","val","length","visPrev","propertiesUpdate","updateDeviceList","count","concat","forceUpdate","componentDidMount","subscribeState","JSON","parse","onRxDataChanged","onRxStyleChanged","onStateUpdated","renderWidgetBody","Card","height","CardContent","values","device","vsID","instance","domID","replaceAll","typeConfig","getDeviceConfigByType","stateID","stateId","dataPoint","relay","deviceDomID","Device","widID","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","module","exports","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","source","from","symbols","to","undefined","TypeError","toObject","s","arguments","call","require","f","g","Fragment","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","k","b","d","l","defaultProps","$$typeof","_owner","current","jsx","jsxs"],"sourceRoot":""}